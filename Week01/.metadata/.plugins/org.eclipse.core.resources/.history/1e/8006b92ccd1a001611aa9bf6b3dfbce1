import java.util.Arrays;

public class Program {

	public static boolean isOdd(int n){
		return (n % 2) == 1;
	}
	
	public static boolean isPrime(int n){
		
		if(n < 2)
			return false;
		
		for (int i = 2; i <= Math.sqrt(n); i++) {
			if(n % i == 0)
				return false;	
		}
		
		return true;
	}
	
	public static int min(int... array){
				
		int index = 0;
		for (int i = 1; i < array.length; i++) {
			
			if(array[index] > array[i])
				index = i;
		}
		
		return array[index];
	}
	
	public static int kthMin(int k, int[] array){
		
		if(k < 1)
			throw new ArithmeticException("Error: Invalid parameter given.");
		
		if(k > array.length)
			throw new ArithmeticException("Error: Not enough elements in the array!");
		
		Arrays.sort(array);
		
		return array[k - 1];
	}
	
	public static double getAverage(int[] array){
		
		int sum = 0;
		for (int i : array) {
			sum += i;
		}
		
		return ((double)sum / array.length);
	}
	
	public static int factorial(int n){
		
		if(n <= 0)
			return 1;
		
		return n * factorial(n - 1);
	}
	
	public static int doubleFac(int n){
		
		return factorial(factorial(n));
	}
	
	public static long kthFac(int k, int n){
		
		int factorial = 1;
		for (int i = 1; i <= k*n; i++) {
			factorial *= i;
		}
		
		return factorial;
	}
	
	public static long getSmallestMultiple(int upperBound){
	
		return factorial(upperBound);
	}
	
	public static int getDigits(int n){
		
		if(n != 0)
			return 1 + getDigits(n / 10);
		else
			return 0;
	}
	
	public static boolean isPalindrome(int n){
		
		int digits = getDigits(n);
		
		return true;	
	}
	
	public static void main(String[] args) {

		int[] arr = {5, 2, 1, 6, 10};
		System.out.println(getAverage(arr));
		
		int x = 123;
		String str = Integer.toString(x);
		System.out.println(str[2]);
	}

}
